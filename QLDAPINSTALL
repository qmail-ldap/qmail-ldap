QMAIL_LDAP by Andre Oppermann <opi@nrg4u.com>,
Claudio Jeker <jeker@n-r-g.com> and Boris Lutz <lutz@n-r-g.com>
(c) 1998,1999,2000,2001,2002 Internet Business Solutions Ltd.

This LDAP patches for qmail come with NO WARRANTY.

These patches are under the BSD license.

RELEASE: current ($Date: 2002/05/06 10:10:17 $)

TOC:
 INSTALL                        how to install the patch
 CONFIG FILES                   all about the extra config file
 DEFAULT LDAP FIELDS            all about the fields in ldap
 EXAMPLES                       example ldif and slapd.conf
 MAILINGLIST, BUGS & PROBLEMS   How to help us helping you

TODO:

 see QLDAPTODO

NEWS:

 see QLDAPNEWS

IMPORTANT NEWS:

 rework of qmail-smtpd with more options for spam protection, etc.

 added pop-before-smtp tools (see POPBEFORESMTP for more info).

 Add an external TODO processor program. This moves the queue todo processing
 out of qmail-send to avoid the silly qmail syndrome with high injection rates
 (see EXTTODO for more info). Enable with -DEXTERNAL_TODO in Makefile.

 a lot of smaller patches see QLDAPNEWS

================================================================================

INSTALL:

1. Make sure you have fairly good knowledge of qmail and LDAP
   READ THEIR FAQs. PLEASE.

2. Read this document. THIS IS IMPORTANT, this is no 
   ./configure; make; make install software.
   If you are not familiar with compiling software you should definitifly
   read http://www.lifewithqmail.org/ldap/ first.

3. You need the following compiled and installed
    - OpenLDAP 1.2.x/2.x or higher (others might also work)
   or
    - Netscape LDAP sdk (tested libldapssl30 on Solaris 2.6)
   and
    - OpenSSL 0.9.4 or higher if you want TLS SMTP encrytion

   If you have problems with OpenLDAP look into their FAQ. The same for
   Netscape and OpenSSL.
   You NEED knowledge of LDAP so READ their FAQ and/or man pages.

4. Apply the qmail-ldap patches to a clean qmail-1.03 source tree
   normaly "cd qmail-1.03_source_tree; patch -p1 < location_of_patch"
   works ;-). There seems to be a problem with the original patch utility
   on Solaris based systems, use the gnu patch utility instead.
   A pre-compiled binary should be available at http://www.sunfreeware.com/
   or on many mirrors around the world.

5. Edit the conf-* files and the top of the Makefile (only the top ;-) )
   You can set/change:
   - LDAPFLAGS=-DQLDAP_CLUSTER (turns the cluster support on) +
               -DLDAP_ESCAPE_BUG (see NOTE) +
               -DCLEARTEXTPASSWD (for cleartext passwords in ldap, bad idea)
               -DDASH_EXT (turn on dash_ext support see 5.3)
     NOTE: at the moment -DLDAP_ESCAPE_BUG is not defined, this should be
           added if your ldap server has problems with the escapeing of 
           LDAP filters (fixed as of OpenLDAP 1.2.8 and higher)

   - LDAPLIBS: the libraries you need for ldap, e.g. -lldap -llber
     NOTE: on Solaris Systems you probably need also -lnsl -lsocket
           newer OpenLDAP libs my need also -lresolv (DNS support).
           It is also good to set the ld runpath with the -R switch
           for more info ld(1) or gcc(1) and 
           http://www.lifewithqmail.org/ldap/.
   - LDAPINCLUDES: perhaps you need a special include-path for ldap
     NOTE: if you need this you may run into shared library problems
           see http://www.lifewithqmail.org/ldap/.

   - MNW=-DMAKE_NETSCAPE_WORK (turns on the patch that fixes the problem 
     with the Netscape download progress bar and qmail-pop3d)

   - MDIRMAKE=-DAUTOMAILDIRMAKE (turns the auto-MAILdir-make-patch on)
   - HDIRMAKE=-DAUTOHOMEDIRMAKE (compiles the auto-HOMEdir-make-patch 
     into the release, you need the ~control/dirmaker file to turn the 
     patch on, see CONFIG FILES)

   - SHADOWLIBS=-lcrypt is needed on most systems (except my OpenBSD box :-) )
     SHADOWLIBS=-lcrypt -lshadow , SHADOWOPTS=-DPW_SHADOW are needed on some 
     Systems (Solaris, Linux) for local password lookups 
     (just like the original djb-checkpassword. See Makefile.)
   - DEBUG=-DDEBUG (compiles debugging into the auth modules and qmail-ldap, 
     see also 10.)
   - TLS* stuff for TLS (SMTP encryption) mostly self explaining

5.1 Have a look at qmail-ldap.h, perhaps you want to change something there.
     LDAP_CATCH_ALL: used for catching mails for a specific domain.
                     Also used for extension nameing with DASH_EXT.
     QUOTA_WARNING_LEVEL: triger level for quotawarning in percent.
     *ID_{MAX,MIN}:  upper and lower limit for uid's and gid's.
     RESTRICT_PROG:  restrict delivery programm pathes to non special shell
                     characters. See also next section 5.2
     ALIASDEVNULL:   replacement for the std. aliasempty for user with
                     neither homeDirectory nor mailMessageStore defined.
     QLDAP_TIMEOUT:  Default ldap search timeout. In seconds.
     LDAP_*:         Names of the ldap fields used for lookups.
     DOTMODE_*:      Names for the different dot modes.
     MODE_*:         Names for the different delivery modes.
     ISACTIVE_*:     Names for the account status.

5.2 Have a look at check.c if you want to change the ldap field check behaviour
    In the standart patch we check for this (in regexp form):
     user: [a-zA-Z0-9@_.][a-zA-Z0-9@_.-]* (for the LDAP_UID field)
     path: [a-zA-Z0-9@_./:=][a-zA-Z0-9@_.-/:=]* 
           (for LDAP_MAILSTORE and LDAP_HOMEDIR)
     prog: [a-zA-Z0-9@_./:=\\\t\n "'+,][a-zA-Z0-9@_.-/:=\\\t\n "'+,]* 
           (for LDAP_PROGRAM with RESTRICT_PROG on, if RESTRICT_PROG is 0
           then most shell escape characters are also allowed. e.g [$#!%&()*;])
     NOTE: have a look at QLDAPNEWS for more info

5.3 Note on DASH_EXT:
    Finally we added a variation of Henning Brauer's dash-ext patch. The main
    difference is the way it handels the extensions.
    Example lookup scheme:
      aaaa-bbbb-cccc@domain.tld
      aaaa-bbbb-CATCHALL@domain.tld
      aaaa-CATCHALL@domain.tld
      CATCHALL@domain.tld
    where CATCHALL is replaced with the value of LDAP_CATCH_ALL defined
    in qmail-ldap.h. If CATCHALL is set to "default" instead of the standart
    "catchall" it is allmost stock qmails behaviour.

6.  Compile and install the stuff (it's the same as in standard qmail
    install -> HINT: read the INSTALL and the FAQ file!!! :) ).
    Now everything should be installed with correct permissions.

6.1 If "make setup check" fails with an error like this:
       /usr/local/lib/libldap.so: undefined reference to `res_query' 
       /usr/local/lib/libldap.so: undefined reference to `dn_expand'
       collect2: ld returned 1 exit status
       make: *** [qmail-lspawn] Error 1
    You have forgotten to add -lresolv to LDAPLIBS.

6.2 If using TLS you can use 'make cert' or 'make cert-req' to create TLS 
    certificates

7.  Create the LDAP user database and start the LDAP server
    See qmail.schema for definition of all fields for OpenLDAP 2.x

8.  Create the proper ~control/ldap* files for qmail-ldap
    At least ldapserver and ldapbasedn must exist (and also 'me')

9.  Test and Enjoy!

10. Debugging: as said befor you can compile qmail-lspawn and the auth modules 
    with a flexible debugging facility (option DEBUG).
    The debug output gets logged through splogger or your favorite logging tool 
    connected to stderr for tcpserver-pop/imap chain.
    To turn on debugging you need only to define the LOGLEVEL environment 
    variable (e.g. with env, env LOGLEVEL=3 qmail-start ...)
    There are these LOGLEVEL:
    LOGLEVEL=1   -> Errors
    LOGLEVEL=2   -> Warnings
    LOGLEVEL=4   -> Info
    LOGLEVEL=8   -> Info^2
    LOGLEVEL=16  -> Debug
    LOGLEVEL=32  -> Debug^2
    LOGLEVEL=64  -> LDAP Debug
    LOGLEVEL=128 -> LDAP Debug^2
    LOGLEVEL=256 -> PASSWD, this level is normaly off because it shows
                    critical data (unencrypted and crypted passwords). To
                    turn it on edit checkpassword.c and increase the level
                    for init_debug().

     WARNING: on production machines don't use levels higher 3 or you will get 
              incredible huge logfiles.
     NOTE: too high debuglevels are reduced to the maximum allowed debug level
           if the level parameter in init_debug() is smaler.
           The LOGLEVEL is compare with a bit mask, so that
           LOGLEVEL=3 will report warnings and errors but LOGLEVEL=2 will
           only report warnings.
           With the new log support the environment variable is LOGLEVEL but
           the old DEBUGLEVEL is still supported.
           The new log support will no longer add the log output to bounce
           messages.

11. NOTE ABOUT POP/IMAP services
    The stock qmail recomends that you use a program by the name 'checkpassword'
    to do the authentication, like this:

       pop3 stream tcp nowait root \
       /var/qmail/bin/qmail-popup qmail-popup \
       YOURHOST /bin/checkpassword /var/qmail/bin/qmail-pop3d Maildir

    With the use of the LDAP patch, this have been slightly altered. We now use
    a program by the name 'auth_pop' instead... Something like this (replacement
    inetd.conf line):

       pop3 stream tcp nowait root \
       /var/qmail/bin/qmail-popup qmail-popup \
       YOURHOST /var/qmail/bin/auth_pop /var/qmail/bin/qmail-pop3d Maildir


    Same goes for the command 'auth_imap' if your IMAP server can use an 
    external program for authentication. auth_imap was designed for 
    courier-IMAP and should work with it out of the box. 
    There is also a auth_ldap modul in courier-imap that should work too.
    You can get courier-imap from http://www.inter7.com

    auth_pop and auth_imap are part of this patch and will be installed with the
    other qmail programs.

================================================================================

CONFIG FILES:

~control/ldapserver

 Space separated list of Hostnames or IP addresses of LDAP servers.
 An additional port can be supplied with the host:port notation.
 Required
 Example: ldap.nrg4u.com ldap2.nrg4u.com ldap3.nrg4u.com:1234

~control/ldapbasedn

 The base DN from where the search in the LDAP tree begins
 Normaly required
 Default: NULL
 Example: o=Internet Pipeline, c=CH
 Note: Referrals are ignored

~control/ldapobjectclass

 The ldap objectclass the search will be limited to
 Default: NULL, will search all objectclasses
 Example: qmailUser
 Note: Can specify more than one, must then be written in ldap search syntax

~control/ldaplogin

 Username for the LDAP server connection
 Default: NULL
 Example: cn=qmail-ldap, o=Internet Pipeline, c=CH
 Note: The user must have enough rights to lookup all user information

~control/ldappassword

 Password for the LDAP server connection
 Default: NULL
 Note: The password is in clear text. The file should be owned by root and
       mode (600) rw-------.

~control/ldaplocaldelivery

 To lookup the local passwd file if the LDAP lookup finds no match. This
 affects qmail-lspawn and auth_* if the LDAP lookup returns nothing.
 Default: enabled
 Example: 1
 Note: boolean, use 0 (zero) or 1 (one)

~control/ldaprebind

 Use the possibility of rebinding to the ldap-server to compare pop3 
 and imap passwords. So you can make your acl more restrictive.
 Default: disabled
 Example: 1
 Note: boolean, use 0 (zero) or 1 (one)

~control/ldapcluster

 Turn clustering on and off. Needs a qmail-ldap compiled with 
 -DQLDAP_CLUSTER or nothing will happen. Also don't forget to set up
 qmail-qmqpd on all servers in the cluster.
 Default: disabled
 Example: 1
 Note: boolean, use 0 (zero) or 1 (one)
 ATTN: the control files me, rcpthosts and locals have to be set carfully
       or you will have big problems.

~control/ldapclusterhosts

 ldapclusterhosts contains a number of hostnames (FQDM) to check togehter
 with ~control/me when clustering is on. This file is useful if you want to
 run multiple instances of qmail-ldap on one machine.
 Default: none
 Example: customersmtp.nrg4u.com
 Note: multiline

~control/ldapdefaultquota

 The default amount of disk space the user can use until all further messages
 get bounced back to the sender. There are two possible limits, size (a byte
 count 'S') and count (a file count 'C')
 Default: unlimited
 Example: 1000000S,1000C (max 1000000 bytes size and max 1000 Mails)
 Note: is overridden by mailQuota, make sure to have set ~control/quotowarning
       otherwise you will not get quota warning messages

~control/ldapdefaultdotmode

 The default interpretation of .qmail files
 Default: ldaponly
 Example: both
 Values: both, dotonly, ldaponly, ldapwithprog, none
 Note: Works only for deliveries based on LDAP lookups.
       Local mails use dotonly like in normal qmail.

~control/ldapmessagestore

 The default prefix for path's in mailMessageStore without trailing /
 Default: NULL
 Example: /maildisk
 Note: Used in virtual users environments

~control/ldapuid

 The default UID used in virtual users environments. This value will be
 used for ldap entries with no LDAP_QMAILUID (see below) field
 Default: NULL
 Example: 1010
 Note: should be a real UID, must be above 100

~control/ldapgid

 The default GID used in virtual users environments. This value will be
 used for ldap entries with no LDAP_QMAILGID (see below) field
 Default: NULL
 Example: 1010
 Note: should be a real GID, must be above 100

~control/ldaptimeout

 The time the ldap search waits for a response from the ldap server
 Default: 30 seconds
 Example: 60
 Note: in seconds, if it gets no response within this time it will
       continue either with the next specified ldap server or it will
       defer the delivery and try again later.

~control/custombouncetext

 Additional custom text in bounce messages, e.g. for providing contact
 information of your ISP or messages in your language
 Default: NULL
 Example: You can contact us at (555) 555 5555
 Note: Multiline
       It MUST NOT contain a blank line ("\n\n") anywhere otherwise you 
       break qsmbf. Use a line with one ore more spaces ("\n \n") instead.
       See http://cr.yp.to/proto/qsbmf.txt for more info.

~control/quotawarning

 Custom text in quota warning message, e.g. for providing contact information
 of your ISP
 Default: NULL
 Example: You can contact us at (555) 555 5555
 Note: Multiline. Needs to be present to make qmail-quotawarn work.

~control/tarpitcount

 Tarpitcount is the number of RCPT TOs you accept before you start tarpitting
 Default: 0 (which means no tarpitting)
 Example: 5
 Note: You can override tarpitcount by setting TARPITCOUNT in qmail-smtpd's
       environment (with tcpserver).

~control/tarpitdelay

 Tarpitdelay is the number of seconds of delay to introduce after each
 subsequent RCPT TO.
 Default: 5
 Example: 10
 Note: You can override tarpitdelay by setting TARPITDELAY in qmail-smtpd's
       environment (with tcpserver).

~control/maxrcptcount

 Maxrcptcount is the maximum number of RCPT TOs you accept before permanently
 rejecting this delivery attempt.
 Default: 0 (which means no maxrcptcount)
 Example: 5
 Note: You can override maxrcptcount by setting MAXRCPTCOUNT in qmail-smtpd's
       environment (with tcpserver).

~control/relaymailfrom

 This file contains envelope sender addresses that are allowed to relay through
 this server.
 Default: none
 Example: user@domain or @domain
 Note: Use with care, the envelope senders address can easily be spoofed and
       then you are an open relay again. It is better to use a scheme like
       POP before SMTP.

~control/rbllist

 Rbllist contains a number of RBL's to check for the given senders IP address.
 The file consists of four TAB separated fields.
   basedomain: base domain address to lookup (e.g. relays.ordb.org)
   action: one of addheader or reject. 
           addheader will just create a X-RBL: header whereas
           reject will reject the smtp connection instantly with a 553 error.
   matchon: any or IP-Address, if a IP-Address is specified the action is only
            taken if the returned address form basedomain is equal to 
            IP-Address. With any all returned IP-Address will match.
   message: message to be included in X-RBL: headers and 553 errors.

 Example:
   basedomain            action     matchon    message
   ========================================================================
   relays.ordb.org       reject     any        see http://ordb.org
   spamguard.leadmon.net addheader  127.0.0.2  address is a dialup address

 NOTE: for readability we replaced the tabs between the four fields basedoamin,
       action, matchon and message with spaces (so you can not copy paste the
       example. (Also the first two lines are not part of the file)
 Default: none
 Note: Multiline. To activate RBL checks you have to set RBL in qmail-smtpd's
       environment (with tcpserver). See this website for more information on
       available RBLs: http://www.declude.com/JunkMail/Support/ip4r.htm

~control/rblonlyheader

 Rblonlyheader causes qmail-smtpd not to reject the message but to add a
 line with it's findings to the mail header.
 Default: none
 Example: 1
 Note: Add's a
       "X-RBL: (relays.ordb.org) matches with 127.0.0.2 and tells us go home"
       header to the message for later filtering. Can also be activated for
       certain IP ranges if you set RBLONLYHEADER in qmail-smtpd's environment
       (with tcpserver).

~control/badrcptto

 This file contains local recipient addresses that are rejected.
 Default: none
 Example: user@domain or @domain
 Note: This can be useful if a spammer sends lots of messages to a
       nonexistant user from an invalid address as otherwise postmaster
       will get lots of double bounces.

~control/bouncemaxbytes

 This file contains the maximal number of bytes to be included in a bounce
 message.
 Default: 0 (off)
 Example: 102400 (equivalent to 10kB)

~control/dirmaker

 Absolute path to your program/script that creates missing homedirs
 Default: none (off)
 Example: /var/qmail/bin/create_homedir
 Note: the script is executeded after the setuid/gid, it isn't running
       under root for security reasons.
       The command is executed with execve not system 
       (so mkdir --mode=700 -p does not work!) use a shell script. 
       $1 is the homedir-path and $2 is aliasempty.
       Possible very simple shell script:

       -cut-
       #!/bin/sh
       mkdir -m 700 -p $1
       #EOF
       -cut-

~control/ldapusername
 NO LONGER USED, PLEASE REMOVE THE FILE

~control/ldappasswdappend
 NO LONGER USED, PLEASE REMOVE THE FILE
 The auth modules now extract the Maildir out of the .qmail file, but only
 on local (/etc/passwd) lookups.

================================================================================

Environment variables with control files (see control file for description):

 TARPITCOUNT
 TARPITDELAY
 MAXRCPTCOUNT
 RBL
 RBLONLYHEADER

Environment variables *without* control file (setable with tcpserver):

SMTP550DISCONNECT

 Disconnect the SMTP session if a 5xx is produced by the sender
 Default: off
 Affects: qmail-smtpd
 Example: "" (any value will do)
 Note: This is useful if you have a spammer trying different senders or
       recipients in the same session separated by rset's.

NOBOUNCE

 Rejects null sender bounces
 Default: off
 Affects: qmail-smtpd
 Example: "" (any value will do)
 Note: Use only in extreme cases and only for certain IP ranges. Blocking
       bounces is considered harmful and strictly prohibited by RFC2821.
       This can be useful if a spammer used your domain as sender and you
       get all the bounces. Otherwise don't enable this! You want to get
       bounces!

SANITYCHECK

 Rejects senders without an @, no . in domain part or too long/short TLD
 Default: off
 Affects: qmail-smtpd
 Example: "" (any value will do)
 Note: Rejects stuff which you probably don't want on your mailserver
       because it's highly likely that it'll bounce later.

RETURNMXCHECK

 Rejects senders if they don't have a valid return MX
 Default: off
 Affects: qmail-smtpd
 Example: "" (any value will do)
 Note: This is quite useful even though it doesn't stops many spammers
       today. But it ensures that you can send an email or a bounce
       back to the sender. It is also useful for your own users/customers
       because if they type a nonexistent sender into their "from" field
       (typos!) it'll stop them the first time instead of getting help-
       desk calls when nobody can reply to them.

BLOCKRELAYPROBE

 Rejects recipients with and "!", "%" or double-"@"
 Default: off
 Affects: qmail-smtpd
 Example: "" (any value will do)
 Note: This is quite useful to stop so called anti-spam probes of clueless
       and overzealus wannabe RBL operators. These probes try to exploit
       some ancient sendwhale bugs never existent in qmail. Unfortunatly
       qmail accepts such stuff even if it doesn't relays it and bounces
       it later. "!" is the old UUCP bang path. "%" is a sendwhale relaying
       hack and double-"@" a sendwhale bug.
       Beware if you actually use the qmail percent-hack! Then this can't
       be used obviously!

LOGLEVEL

 Level of log verbosity in qmail-smtpd
 Default: 0 (NULL)
 Affects: qmail-smtpd
 Example: 3
 Note: integer value from 0-3, everything will be logged through tcpserver

LOGLEVEL or DEBUGLEVEL

 Level of log verbosity in qmail-lspawn, auth_*
 Default: 0 (NULL)
 LEVELS:
    LOGLEVEL=1   -> Errors
    LOGLEVEL=2   -> Warnings
    LOGLEVEL=4   -> Info
    LOGLEVEL=8   -> Info^2
    LOGLEVEL=16  -> Debug
    LOGLEVEL=32  -> Debug^2
    LOGLEVEL=64  -> LDAP Debug
    LOGLEVEL=128 -> LDAP Debug^2
    LOGLEVEL=256 -> PASSWD, this level is normaly off because it shows
                    critical data (unencrypted and crypted passwords). To
                    turn it on edit checkpassword.c and increase the level
                    for init_debug().
 WARNING: on production machines don't use levels higher 3 or you will get 
          incredible huge logfiles.
 NOTE: too high debuglevels are reduced to the maximum allowed debug level
       if the level parameter in init_debug() is smaler.
       The LOGLEVEL is compare with a bit mask, so that
       LOGLEVEL=3 will report warnings and errors but LOGLEVEL=2 will
       only report warnings.
       Both names are supported with LOGLEVEL having the higher priority.

================================================================================

DEFAULT LDAP PARAMETER FIELDS:
NOTE: keywords have to match exactly, so pay attention.
      All fieldnames and keywords can be changed at compile time.
      Just have a look at qmail-ldap.h.
      
LDAP_MAIL (default: "mail")

 The users email address
 Required
 Example: jdoe@foo.bar


LDAP_MAILALTERNATE (default: "mailAlternateAddress")

 Secondary (alias) mailaddresses for the same user
 Example: jd@foo.bar
 Note: multifield


LDAP_UID (default: "uid")

 The username for POP3 and IMAP delivery
 Required
 Example: jdoe
 Note: this name will also be set as $USER for qmail-local and program delivery.


LDAP_QMAILUID (default: "qmailUID")

 UID of the user on the mailsystem
 Example: 1010
 Note: Can be omitted in a virtual users environment
       but only if it is defined via the control file ~control/ldapuid 

LDAP_QMAILGID (default: "qmailGID")

 GID of the user on the mailsystem
 Example: 1010
 Note: Can be omitted in a virtual users environment
       but only if it is defined via the control file ~control/ldapgid 


LDAP_PASSWD (default: "userPassword")

 The password for POP3/IMAP authentication
 Example: {MD5}uSI59Zyfa5lapBLGfJrD+g==
 Note: Can be encrypted with {SHA}, {MD4}, {MD5}, {RMD160}, {NS-MTA-MD5}, 
       {crypt} crypt (without {crypt} prefix) or cleartext (only if compiled 
       with -DCLEARTEXTPASSWD (a bad idea on production systems)).
       If you rebind to the ldapserver don't use {NS-MTA-MD5}, {RMD160} and
       probably {MD4}. These algorithms are sometimes not supported by the 
       ldap servers, so check with their documentation.
       To generate passwords you can use the included tool 'digest'.


LDAP_MAILSTORE (default: "mailMessageStore")
and
LDAP_HOMEDIR (default: "homeDirectory")

 Path to the maildir/mbox on the mail system is extracted from those fields.
 If LDAP_HOMEDIR is found this field is used as $HOME, using aliasempty or
 mailMessagestore if defined as default delivery method.
 If only LDAP_MAILSTORE is defined this will be used as $HOME and aliasempty
 as default delivery method.
 If neither LDAP_MAILSTORE nor LDAP_HOMEDIR is defined, ~alias (qmails alias 
 user homedir) will be used as $HOME and ALIASDEVNULL (defined in qmail-ldap.h)
 as default delivery method. Also the delivery mode is set to ldap only and 
 forward only (LDAP_DOTMODE and LDAP_MODE).
 Example: /home/jdoe/
 Note: LDAP_MAILSTORE can be written relative in a virtual users environment
       ldapmailstore will be prefixed to make the path absolute.
       For more info have a look at the QLDAPNEWS file.
       If you use "homeDirectory" in an incompatible way then redefine it in
       qldap-ldap.h to something not used, like "noHomeDirectory".


LDAP_QUOTA (default: "mailQuota")

 The amount of space the user can use until all further messages get bounced.
 There are two possible limits, size (a byte count) and count (a file count).
 The mailQuota is a string of the form figures type (S or C) and a ',' 
 separating multiple entries.
 Example: 1000000S,1000C (max 1000000 bytes size and max 1000 Mails)
 Note: overrides ldapdefaultquota, the old format (only a number representing
       the amount of bytes allowed) is still supported


LDAP_FORWARDS (default: "mailForwardingAddress")

 Address(es) to forward all incoming messages for this user to.
 Example: jdoe@new.place
 Note: multifield


LDAP_PROGRAM (default: "deliveryProgramPath")

 Program to execute for all incoming mails. Gets the message as input on stdin.
 Example: /usr/bin/program -c -s
 Note: multifield. The same as |/usr/bin/program -c -s in .qmail
       Works only with qmailDotMode set to ldapwithprog or both.
       With ldaponly set deliveryProgramPath is silently ignored.
       Before using it have a look at QLDAPNEWS, qmail-ldap.h, check.c and
       see also 5.2.


LDAP_MODE (default: "deliveryMode")

 multi field entries of these keywords
 - normal: resets to the normal .qmail behavior
           (Maildir/box delivery only if no forwards or programs are executed)
 - forwardonly: is equal to set the execute bit of .qmail
                so only forwards are allowed
 - nombox: ignore all maildir/mbox deliveries
 - localdelivery: forces maildir/mbox delivery (into $HOME/$ALIASEMPTY)
 - reply: send also an auto_reply mail with text from mailReplyText 
 - echo: something very strange, just echo the message (nothing else)
 Default: no QMAILMODE is eq to QMAILMODE=normal other stuff is ignored (with
          warning)
 Note: echo exits immediatly after the "echoing" (only useful for testing
       purposes). reply is executed directly and does not interfere with
       the other settings.
       "normal", "nombox", "localdelivery" and "forwardonly" are set one after
       the other (i.e. "nombox,localdelivery,normal" resets to a "normal"
       delivery).
       There are some strange behavior when localdelivery and nombox or
       forwardonly are set, so handle them with care.
       

LDAP_REPLYTEXT (default: "mailReplyText")

 A reply text for every incoming message (multiline)
 Example: I'm on vacation until next monday
 Example2: multiline base64
   SGkgcW1haWwtbGRhcCBmYW5zLAoKaWYgSSBjb3VsZCBJIHdvdWxkIGJlIGlu
   IHRoZSBtb3VudGFpbnMgc2tpaW5nIGJ1dCBJJ20gYXQgaG9tZQp3cml0aW5n
   IHRoaXMgbWVzc2FnZSBmb3IgdGhlIFFMREFQSU5TVEFMTCBmaWxlLgpUbyBi
   ZSBob25lc3QsIHRoZXJlIGlzIG5vdCBlbm91Z2ggc25vdyBhcm91bmQgdG8g
   ZW5qb3kgc2tpaW5nLgoKdGhhbmtzIGZvciByZWFkaW5nIHRoZSBRTERBUElO
   U1RBTEwgZmlsZQoKLS0KOndxIENsYXVkaW8K
 Note: used only if deliveryMode is set to reply.
       To use multiline text in ldap it has to be base64 in ldif.
       GUI tools like GQ are doing this correct, ldapadd can handle base64
       inputs or a path to a file containing the reply text (man ldapadd).


LDAP_DOTMODE (default: "qmailDotMode")

 The default interpretation of .qmail files
 Values: both, dotonly, ldaponly, ldapwithprog, none (just Maildir/box delivery)
 Default: set by file ~control/ldapdefaultdotmode
 Note: Works only for deliveries based on LDAP lookups,
       overrides ~control/ldapdefaultdotmode.
 

LDAP_MAILHOST (default: "mailHost")

 On which qmail server the messagestore of this user is located
 Example: qmail3.nrg4u.com
 Note: Must be the same as the ~control/me hostname on the homeserver 
       of the user.


LDAP_ISACTIVE (default: "accountStatus")

 The status of a user account.
 Values: active (no restrictions), 
         nopop (only mail delivery but no pop access), 
         disabled (bounce incoming messages)
         deleted (bounce incoming messages and mark for deletion, 
                  see LDAP_PURGE)
 Default: no accountStatus is equal to active.


LDAP_PURGE (default: "qmailAccountPurge")

 If accountStatus set to 'deleted', the earliest date when the mailMessageStore
 including all remaining content will be deleted from the filesystem.
 Values: date and time in seconds since Jan. 1, 1970 (the epoch)
 Default: not set
 Note: This deletion has to be done by an external helper program, for example
       periodically run from cron. A sample script is included under the name
       qmailAccountPurge.sh. Handle automatic deletions with care!


LDAP_QMAILUSER (default: "qmailUser")
 NO LONGER USED, REMOVE IT SOMEWHEN FROM YOUR DATABASE
 Replaced by LDAP_UID

================================================================================

EXAMPLE QLDAP LDIF FILE:

dn: cn=Andre Oppermann, o=Internet Pipeline, c=CH
cn: Andre Oppermann
sn: Oppermann
objectClass: top
objectClass: person
objectClass: inetOrgPerson
objectClass: qmailUser
mail: opi@opi.flirtbox.ch
mailHost: opi.flirtbox.ch
mailMessageStore: /usr/home/opi/Maildir/
mailQuota: 1000000S,100C
qmailUID: 1001
qmailGID: 1001
uid: opi
userPassword: {MD5}b28a87511da157f147ed4766b0474a8a

================================================================================

EXAMPLE SLAPD.CONF FILE:

include         /usr/local/etc/ldap/slapd.at.conf
include         /usr/local/etc/ldap/slapd.oc.conf
schemacheck     on
#referral       ldap://ldap.itd.umich.edu

#######################################################################
# ldbm database definitions
#######################################################################

database        ldbm
suffix          "o=Internet Pipeline, c=CH"
directory       /var/qmail/users
rootdn          "cn=root, o=Internet Pipeline, c=CH"
rootpw          secret
index           objectclass,mail,mailAlternateAddress,uid
index           default none

================================================================================

ADD THIS SCHEMA TO SLAPD.OC.CONF (for OpenLDAP 1.2.x)

objectclass qmailUser
        requires
                objectclass,
                mail,
                uid
        allows
                mailMessageStore,
                homeDirectory,
                userPassword,
                mailAlternateAddress,
                qmailUID,
                qmailGID,
                mailQuota,
                mailHost,
                mailForwardingAddress,
                deliveryProgramPath,
                qmailDotMode,
                deliveryMode,
                mailReplyText,
                accountStatus,
                qmailAccountPurge


FOR OpenLDAP 2.x DO THIS INSTEAD:

Copy qmail.schema to your OpenLDAP installation location and add this
to your slapd.conf:

 include /path/to/your/OpenLDAP/qmail.schema

================================================================================

MAILINGLIST, BUGS & PROBLEMS

There is a qmail-ldap specific mailinglist at qmail-ldap@argus.pipeline.ch.
To subscribe just write a mail to qmail-ldap-subscribe@argus.pipeline.ch.

The qmail-ldap mailinglist archive can be found at
http://www.suares.com/qmail-ldap/archive

There is also a life with qmail-ldap homepage at:
http://www.lifewithqmail.org/ldap

If you have a problem with the patch or there seems to be a bug in the code
please add some output of qmail-ldap with LOGLEVEL set to something higher
then 2 (255 is a good setting to see all possible problems).
It is impossible to know where the problem is when somebody writes a mail like:
I have a problem with the patch. No mail gets send to the user in the ldap db.

Normaly you get also a better response if you specify your problem in detail.
It seems that often a "RTFM" is enough, but when you read until here you 
are probably not such a candidate.

END :-)

